// js/location-detector.js
const LocationDetector = {
  cachedResult: null,
  
  async detectRussianUser() {
    // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏
    if (this.cachedResult !== null) {
      return this.cachedResult;
    }
    
    try {
      const response = await fetch('/api/check-location');
      const data = await response.json();
      
      this.cachedResult = data.isRussian;
      
      console.log('üåç Location detected:', {
        isRussian: data.isRussian,
        country: data.country,
        confidence: data.confidence
      });
      
      return this.cachedResult;
      
    } catch (error) {
      console.warn('Location detection failed:', error);
      
      // Fallback –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ —è–∑—ã–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
      this.cachedResult = navigator.language?.includes('ru') || false;
      return this.cachedResult;
    }
  },
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç URL —Ç—Ä–µ–∫–∞ –¥–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  processTrackUrl(originalUrl, useProxy) {
    if (!useProxy) return originalUrl;
    
    return originalUrl.replace(
      'https://rpattpnro3om3v4l.public.blob.vercel-storage.com/music/',
      '/proxy-music/'
    );
  }
};

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
window.LocationDetector = LocationDetector;
